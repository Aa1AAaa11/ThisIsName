package codeground;

import java.util.Scanner;

public class Codeground_75 extends Solution{
	static String Answer;
	/* 
	 * 요약 : 회문인 숫자들의 합으로 표현, 단 회문인 숫자가 최소가 되도록
	 * 
	 * 입력값이 10000 이하이므로 자릿수 별로 나누어 확인
	 * 
	 * 참고) 숫자 = 회문1 + not회문1
	 * 			회문1 = 회문2 + not회문2
	 * 		숫자 = 회문2 + not회문1+not회문2
	 * 					not회문1+not회문2->회문이 되는지 확인 필요 ----(2)
	 * 
	 * 1자리수(1~9) : 무조건 회문
	 * 2자리수(10~99) : 회문 = 이전회문 + 11 >> 이므로 모든 숫자 : 회문 + 0~10 ---(1)
	 *									 (회문+n(n>11) = (회문 +11->회문)+(n-11))이므로 --(1)
	 *				회문 + 0~9 : 숫자가 2개의 회문의 합으로 표현 가능
	 *				회문 + 10 : a a-1 = b b + n >> n = a-b a-b-1 이므로 n은 회문이 될 수 없음  >> 회문+10일 경우에만 회문의합 3개로 표현 가능
	 *				>>> 숫자 : 숫자보다 작은 최대 회문 + 숫자1 >>>숫자 : 숫자보다 작은 최대 회문 + 숫자1보다 작은 최대 회문 + 회문(0~9)
	 *				
	 * 3자리수(100~999) : 회문  = 이전회문 + 10 or 회문  = 이전회문 + 11 >>> 이므로 숫자 : 회문+0~10
	 * 					회문 + 0~9 : 숫자가 2개의 회문의 합으로 표현 가능
	 * 					회문 + 10 : 제한된 경우의 수... 201, 302, 403... > n 0 n-1의 꼴을 가짐
	 * 								n+1 0 n이 2개의 회문으로 표현하려면 a k a + h n-a (단, k+h=10인 어떠한 수열도 가능하지만 h n-a가 회문이여야 하므로 h = n-a)
	 * 									n+1 0 n = a 10-n+a a + n-a n-a (n>a)>>> n=1(201)인 경우를 제외하고는 2개의 회문의 합으로 표현 가능
	 * 					>>> 201 제외하고 2개의 회문의 합으로 표현가능
	 * 
	 * 4자리수(1000~9999) : 회문 = 이전회문 + 110 or 회문 = 이전회문 + 2 >>> 이므로 숫자 : 회문 + 0~109
	 * 					  (2) 에 의해 회문이 회문이 아닌과 회문의 합으로 표현가능한지 확인 필요
	 * 
	 * 						110*n + 2*m (n<=9, n<=1)은 회문이 아님 ----(3)
	 * 
	 * 						110*9 + 2 = 1001(회문)> 일반적으로 9번 후 2가 빠짐,, 다음 회문으로..
	 * 							1001 + 110*n도 회문 1001 + 1001*n도 회문
	 * 
	 * 						회문-1001(4자리 수 중 최소 회문) = 회문, 단 1001이전부터는 110 씩 차이가 아니므로 10/11/2(1001과 99) 씩 차이가 남. 회문 없음.. ---(4)
	 * 
	 * 						(3) or (4)를 따지면 된다.
	 * 						
	 * 							
	 * 
	 * 5자리수(10000) : 9999 + 1>> 2개 회문으로 표현 가능
	 *  %10...을 /10..에 맞추면 회문
	 *  본인보다 작은 숫자 중 최대 회문을 구한 후 뺀다. 뺀 숫자도 마찬가지로 회문을 구한다.
	 * 0~9 : 무조건 회문
	 * 2자리 숫자 : 11, 22, ... > 회문이 11 차이 > 회문+0~9 = 회문 2개로 표현 가능, 회문+10 : 회문+회문으로 표현 불가.. 
	 *    2자리 숫자 : 회문 2개의 합으로 만들 수 있음 
	 *    
	 * 3자리 숫자 : 111, 121 ...202 > 회문이 10, 11 차이 > 회문 + 0~9:회문 2개로 표현 가능, 
	 *  회문+11 :백의자리=일의자리+1, 십의자리 = 0 인경우.. 이 경우는 3자리수 회문2개로 표현 가능하거나/ 안되거나 >  3자리수 회문 2개로 표현 가능한 경우 : 일의자리 숫자가 2개의 숫자의 합으로 표현 가능한 경우 -> 201제외하고 다 됨...>aba+cdc일때, a+c가 일의자리숫자이고 b+d가 10을 만족하는 아무 숫자.. 
	 *    a+c = 일의자리숫자 +1은 안되는게 이러면 백의자리에서도 반올림이 된다.
	 *    3자리 숫자 : 201 제외하고 회문 2개의 합으로 만들 수 있음 
	 *    
	 * 4자리 숫자 : 1001, 1111, 1221, ... 9999 > 회문이 110, 111 차이 > 회문 + 0~111로 표현 가능 
	 *  0~111 : 회문 2개로 표현 가능.. 4자리숫자 : 회문 3개로 표현 가능. 
	 *  abba+cddc = efgh 일 경우 efgh가 회문이 아닐 때(회문이면 바로 회문 1개로 표현한 거..) e= h+1, f= g+1..  > 4자리 숫자일 때 천의자리=일의자리+1, 백의자리=십의자리+1일 경우 회문2개로 표현가능
	 * */

	@Override
	public void solution() {
		Scanner sc = new Scanner(System.in);

		int T = sc.nextInt();
		for(int test_case = 0; test_case < T; test_case++) {
			Answer = "";
			int n = sc.nextInt();
			
			System.out.println("Case #"+(test_case+1));
			System.out.println(Answer);
		}
		
	}
}
